{"version":3,"sources":["wick.jpg","ninja.jpg","menblack.jpg","search.js","star.js","movie.js","carousel.js","spinner.js","listmovie.js","compoHOC.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","SearchPage","props","md","className","onChange","searchHandler","type","value","searchStr","placeholder","aria-label","gradient","rounded","size","Star","state","rating","nextValue","prevValue","name","this","setState","RatingHandler","starCount","onStarClick","bind","React","Component","Movi","element","lg","wide","ecommerce","cascade","src","image","top","alt","href","titre","editing","useStyles","makeStyles","theme","fab","margin","spacing","extendedIcon","marginRight","FloatingActionButtons","classes","Fab","color","SpinnerPage","class","role","LoadingHOC","WrappedComponent","loading","x","Container","style","display","justifyContent","map","el","key","id","tablist","wick","ninja","menblack","App","changeRatingHandler","titleFilter","event","strToSearch","target","toLowerCase","isLoading","setTimeout","filter","includes","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d4ad8f04.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/wick.1bdbe889.jpg\";","module.exports = __webpack_public_path__ + \"static/media/ninja.258c1dd3.jpg\";","module.exports = __webpack_public_path__ + \"static/media/menblack.ed8d3abb.jpg\";","import React from \"react\";\r\nimport { MDBCol, MDBFormInline, MDBBtn } from \"mdbreact\";\r\n\r\nconst SearchPage = (props)=>{\r\n  return (\r\n    <MDBCol md=\"4\">\r\n      <MDBFormInline className=\" mb-4\">\r\n        <input onChange={props.searchHandler} className=\"form-control mr-sm-2\" \r\n              type=\"text\" \r\n              value={props.searchStr}\r\n              \r\n              placeholder=\"Search\" aria-label=\"Search\" />\r\n        <MDBBtn gradient=\"aqua\" rounded size=\"sm\" type=\"submit\" className=\"mr-auto\">\r\n          Search\r\n        </MDBBtn>\r\n      </MDBFormInline>\r\n    </MDBCol>\r\n  );\r\n}\r\n\r\nexport default SearchPage;","import React, { Component } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport StarRatingComponent from 'react-star-rating-component';\r\n\r\nclass Star extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      rating: 1\r\n    };\r\n  }\r\n\r\n  onStarClick(nextValue, prevValue, name) {\r\n    this.setState({rating: nextValue});\r\n    this.props.RatingHandler(nextValue);\r\n  }\r\n\r\n  render() {\r\n    const { rating } = this.state;\r\n    \r\n    return (                \r\n      <div className=\"etoile\" >\r\n        <StarRatingComponent \r\n          name=\"rate1\" \r\n          starCount={5}\r\n          onStarClick={this.onStarClick.bind(this)}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default Star;","import React, { Component } from 'react';\r\nimport { Container, Row, Col } from 'reactstrap';\r\nimport StarRatingComponent from 'react-star-rating-component';\r\nimport { MDBRow, MDBCol, MDBCard, MDBCardImage, MDBCardBody, MDBCardTitle, MDBCardText, MDBCardFooter,  MDBTooltip } from \"mdbreact\";\r\n\r\n\r\n\r\nimport {\r\n    Card, CardImg, CardText, CardBody,\r\n    CardTitle, CardSubtitle, Button\r\n} from 'reactstrap';\r\n\r\n\r\n\r\nconst Movi = ({ element }) => {\r\n    return (\r\n\r\n            <section className=\"text-center my-5\">\r\n              <MDBRow>\r\n                <MDBCol lg=\"10\" md=\"12\" className=\"mb-lg-0 mb-4\">\r\n                  <MDBCard wide ecommerce>\r\n                    <MDBCardImage\r\n                      cascade \r\n                      src={element.image}\r\n                      top\r\n                      alt=\"sample photo\"\r\n                      />\r\n                    <MDBCardBody cascade className=\"text-center\">\r\n                      <a href=\"#!\" className=\"text-muted\">\r\n                        <h5>Action</h5>\r\n                      </a>\r\n                      <MDBCardTitle>\r\n                        <strong>\r\n                          <a href=\"#!\">{element.titre}</a>\r\n                        </strong>\r\n                      </MDBCardTitle>\r\n                      <MDBCardText>\r\n                        Lorem ipsum dolor sit amet, consectetur adipisicing minima\r\n                        veniam elit.\r\n                      </MDBCardText>\r\n                      <MDBCardFooter className=\"px-1\">\r\n                        <span className=\"float-left font-weight-bold\">\r\n                          <strong>Download</strong>\r\n                        </span>\r\n                        <span className=\"float-right\">\r\n                        <StarRatingComponent \r\n                  name=\"rate2\" \r\n                  editing={false}\r\n                  starCount={5}\r\n                  value={element.rating}\r\n                  />\r\n                        </span>\r\n                      </MDBCardFooter>\r\n                    </MDBCardBody>\r\n                  </MDBCard>\r\n                </MDBCol>\r\n              </MDBRow>\r\n            </section>\r\n            \r\n               \r\n          );\r\n        }\r\n\r\nexport default Movi;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport AddIcon from '@material-ui/icons/Add';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  fab: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  extendedIcon: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nexport default function FloatingActionButtons() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div>\r\n      <Fab color=\"primary\" aria-label=\"add\" className={classes.fab}>\r\n        <AddIcon />\r\n      </Fab>\r\n    </div>\r\n  );\r\n}","import React from \"react\";\r\n\r\nconst SpinnerPage = () => {\r\n  return (\r\n    <div class=\"spinner-border text-primary\" role=\"status\">\r\n        <span class=\"sr-only\">Loading...</span>\r\n      </div>\r\n  );\r\n}\r\n// nessrine commit to test the spinner\r\nexport default SpinnerPage;","import React, { Component } from 'react';\r\nimport Movi from './movie';\r\nimport { Container, Row, Col } from 'reactstrap';\r\nimport { wrap } from 'module';\r\nimport { MDBRow, MDBCol, MDBCard, MDBCardImage, MDBCardBody, MDBCardTitle, MDBCardText, MDBCardFooter,  MDBTooltip } from \"mdbreact\";\r\nimport StarRatingComponent from 'react-star-rating-component';\r\nimport Demo from './carousel';\r\nimport LoadingHOC from './compoHOC'\r\n\r\n\r\nconst Moviecard = ({ x }) => {\r\n    return (\r\n        \r\n        <Container>\r\n\r\n            <div className=\"mx-auto\" style={{ display: 'flex', justifyContent: 'space-around' }}>\r\n                {x.map(el => <Movi key={el.id} element={el}/>)}\r\n            </div>\r\n            <section className=\"text-center my-5\">\r\n              <MDBRow>\r\n                <MDBCol lg=\"4\" md=\"6\" className=\"mb-lg-0 mb-4\">\r\n                  <MDBCard wide ecommerce>\r\n                    <MDBCardImage\r\n                      cascade \r\n                      src=\"https://www.mearto.com/assets/no-image-83a2b680abc7af87cfff7777d0756fadb9f9aecd5ebda5d34f8139668e0fc842.png\"\r\n                      top\r\n                      alt=\"sample photo\"\r\n                    />\r\n                    <MDBCardBody cascade className=\"text-center\">\r\n                      <a href=\"#!\" className=\"text-muted\">\r\n                        <h5>Genre</h5>\r\n                      </a>\r\n                      <MDBCardTitle>\r\n                        <strong>\r\n                          <a href=\"#!\"></a>\r\n                        </strong>\r\n                      </MDBCardTitle>\r\n                      <MDBCardText>\r\n                <Demo/>\r\n                      </MDBCardText>\r\n                      <MDBCardFooter className=\"px-1\">\r\n                        <span className=\"float-left font-weight-bold\">\r\n                          <strong></strong>\r\n                        </span>\r\n                        <span className=\"float-right\">\r\n                        <StarRatingComponent \r\n                  name=\"rate2\" \r\n                  editing={false}\r\n                  starCount={5}\r\n                  value=\"0\"\r\n                />\r\n                        </span>\r\n                      </MDBCardFooter>\r\n                    </MDBCardBody>\r\n                  </MDBCard>\r\n                </MDBCol>\r\n              </MDBRow>\r\n            </section>\r\n        </Container>\r\n\r\n    )\r\n}\r\nexport default LoadingHOC(Moviecard);","import React, { Component } from 'react';\r\n\r\nimport SpinnerPage  from './spinner';\r\n\r\n\r\n\r\nconst LoadingHOC = (WrappedComponent) => {\r\n\r\n    return class LoadingHOC extends Component {\r\n\r\n        render(){\r\n\r\n           return this.props.loading ? <SpinnerPage/> : <WrappedComponent {...this.props} />\r\n\r\n        }\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nexport default LoadingHOC;","import React, { Component } from 'react';\nimport './App.css';\nimport SearchPage from './search';\nimport Star from './star';\nimport Moviecard from './listmovie';\n\n\nimport wick from './wick.jpg';\nimport ninja from './ninja.jpg';\nimport menblack from './menblack.jpg';\n\nconst tablist=[{id:'jhone', image:wick, titre:'John Wick: Chapter 3',rating:'4' },\n{id:'ninja', image:ninja, titre:'Ninja Assassin',rating:'5' },\n{id:'menblack', image:menblack, titre:'Men in Black', rating:'3' }]\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      x:tablist,\n      value:1,\n      titre:'',\n      isLoading: true,\n    }\n  }\n  componentDidMount(){\n    setTimeout(()=>this.setState({isLoading: false}), 3000)\n      }\n\n  changeRatingHandler = (rating)=>{\n    this.setState({\n      value : rating\n    })\n  }\n\n    titleFilter = (event)=>{\n      let strToSearch = event.target.value;\n      this.setState({\n        titre : strToSearch.toLowerCase()\n      })\n  }\n  render() {\n\n    return (\n    <div className=\"App\">\n       <div className=\"container\">\n       <div className=\"container\" style={{display: 'flex', justifyContent: 'center'}} >\n     <SearchPage searchStr={this.state.titre} searchHandler= {this.titleFilter}/>\n     <Star RatingHandler={this.changeRatingHandler}/>\n     </div>\n     \n     <Moviecard loading={this.state.isLoading} x={tablist.filter( el=> \n                                        el.rating >= this.state.value && \n                el.titre.toLowerCase().includes(this.state.titre.toLowerCase()))} />\n    </div>\n  </div>)\n}\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\nimport \"bootstrap-css-only/css/bootstrap.min.css\";\nimport \"mdbreact/dist/css/mdb.css\";\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}